
paint 的方法

//设置一个渲染器  TileMode 渲染模式: CLAMP延伸模式 REPEAT重复模式 MIRROR镜像模式
1.SweepGradient(float cx, float cy, int color0, int color1)角度渲染 cx,cy 渲染的中心坐标 ,color0 开始渲染的颜色,color1 结束渲染的颜色  
2.LinearGradient(float x0, float y0, float x1, float y1, int color0, int color1,TileMode tile)线性渲染 
x0,y0 起点坐标 x1,y1, 坐标 color0,开始渲染的,color1,结束渲染的颜色.TileMode渲染模式
3.RadialGradient(float centerX, float centerY, float radius,int centerColor, int edgeColor, @NonNull TileMode tileMode)中心扩散渲染
centerX,centerY渲染的中心点 radius  渲染半径 centerColor 中心点的颜色,edgeColor 外层颜色.TileMode 渲染模式
4.BitmapShader(@NonNull Bitmap bitmap, TileMode tileX, TileMode tileY) bitmap 渲染
bitmap 需要渲染的bitmap   tileX x方向的渲染模式, tileY y方向的渲染模式
5.ComposeShader(Shader shaderA, Shader shaderB, PorterDuff.Mode mode),混合渲染
shaderA 第一个渲染器 shaderB 第二个渲染器 Mode  混合模式 src_in src_over 等
如果shaderA和shaderB的是同一类型的渲染器 需要取消硬件加速  setLayerType(LAYER_TYPE_SOFTWARE, null);

paint.setShader();

//设置ColorFilter  

1. LightingColorFilter(int mul,int add); mul 与目标像素相乘,add 与目标像素相加, 参数都是颜色的int值一致
   .最基本的参数为 mul = 0xffffff  add = 0x000000  这个时候设置上去 是没有任何效果的. 
   如果想去掉红色 让 mul = 0x00ffff  也就是红色的值改为0  add保持不变就可以 
   
   计算过程为 : R' =  R * 0x00 / 0xff + 0x00 = 0;
               G' =  G * 0xff / 0xff + 0x00 = G;
               B' =  B * 0xff / 0xff + 0x00 = B;
               
想要加强指定的颜色值  就可以 设置mul 为 0xffffff  然后让add 中指定的数值增大 
比如加强绿色  add = 0x003300;  这样  绿色会被增强 其它的颜色保持不变

2.PorterDuffColorFilter(int color, Mode mode)  color  颜色值  mode  图片混合模式中的一种.如src_in src_out等. 
使用指定的颜色和绘制对象进行合成

3.ColorMatrixColorFilter(float[] array);  array  一个 4 x 5 的矩阵  
.ColorMatrixColorFilter(ColorMatrix matrix);
 array= [a,b,c,d,e,
         f,g,h,i,j,
         k,l,m,n,o,
         p,q,r,s,t]
 通过矩阵计算 将颜色值进行转换
 R' = a*R + b*G + c*B + d*A + e;
 G’ = f*R + g*G + h*B + i*A + j;  
 B’ = k*R + l*G + m*B + n*A + o;  
 A’ = p*R + q*G + r*B + s*A + t;  
 
或者直接使用ColorMatrix  他的内部也是一个4 x 5 的矩阵而且自带一些方法 可以设置
ColorMatrix.setSaturation(); 设置饱和度

paint.setColorFilter();
